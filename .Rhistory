ecls$new.y <- c1rmscal
y[x < 1]
x <- sort(rnorm(500))
y <- x + rnorm(500)
mod3 <- lm(y~x)
par(mfrow = c(1, 2))
plot(mod3, which = 1)
# heteroskedastic example
y[x < 1] <- y/abs(x)
y[x > 1] <- y*abs(x)
e[x < -1] <- 1/e[x < -1]
e[x > 1] <- e[x > 1]^2
y2 <- x + e
mod4 <- lm(y2~x)
plot(mod4, which = 1)
x <- sort(rnorm(500))
e <- rnorm(500)
y <- x + e
mod3 <- lm(y~x)
par(mfrow = c(1, 2))
plot(mod3, which = 1)
e[x < -1] <- 1/e[x < -1]
e[x > 1] <- e[x > 1]^2
sign(e)
x <- sort(rnorm(500))
e <- rnorm(500)
y <- x + e
mod3 <- lm(y~x)
par(mfrow = c(1, 2))
plot(mod3, which = 1)
# heteroskedastic example
e[x < -1] <- 1/e[x < -1]
e[x > 1] <- sign(e) * e[x > 1]^2
y2 <- x + e
mod4 <- lm(y2~x)
plot(mod4, which = 1)
e[x < -1] <- 1/e[x < -1]
e[x > 1] <- sign(e[x > 1]) * e[x > 1]^2
y2 <- x + e
mod4 <- lm(y2~x)
plot(mod4, which = 1)
e
plot(e, x)
x <- sort(rnorm(500))
e <- rnorm(500)
y <- x + e
mod3 <- lm(y~x)
par(mfrow = c(1, 2))
plot(mod3, which = 1)
# heteroskedastic example
e2[x < -1] <- 1/e[x < -1]
e2[x > 1] <- sign(e[x > 1]) * e[x > 1]^2
y2 <- x + e2
mod4 <- lm(y2~x)
plot(mod4, which = 1)
e2 <- e
e2[x < -1] <- 1/e[x < -1]
e2[x > 1] <- sign(e[x > 1]) * e[x > 1]^2
y2 <- x + e2
mod4 <- lm(y2~x)
plot(mod4, which = 1)
e
hist(e)
hist(e2)
e2 <- e
e2[x < -1] <- 1/e[x < -1]
e2[x > 1] <- sign(e[x > 1]) * e[x > 1]^2
e2[e2 > 5] <- 5
y2 <- x + e2
mod4 <- lm(y2~x)
plot(mod4, which = 1)
hist(e2)
2 <- e
e2[x < -1] <- 1/e[x < -1]
e2[x > 1] <- sign(e[x > 1]) * e[x > 1]^2
e2[e2 > 5] <- 5
e2[e2 < -5] <- -5
y2 <- x + e2
mod4 <- lm(y2~x)
plot(mod4, which = 1)
plot(x,e)
plot(x,e2)
1/e[x < -1]
e2 <- e
e2[x < -1] <- e[x< -1] - sign(e[x < -1]) * .5*e[x < -1]
e2[x > 1] <- e[x> 1] + sign(e[x > 1]) * .5*e[x > 1]
y2 <- x + e2
mod4 <- lm(y2~x)
plot(mod4, which = 1)
# heteroskedastic example
e2 <- sign(e)*sort(abs(e))
e2
e2 <- sign(e)*sort(abs(e))
y2 <- x + e2
mod4 <- lm(y2~x)
plot(mod4, which = 1)
x
# heteroskedastic example
e2 <- sign(e)*sort(abs(e)) + e
e2
y2 <- x + e2
mod4 <- lm(y2~x)
plot(mod4, which = 1)
# heteroskedastic example
e2 <- .5*sign(e)*sort(abs(e)) + e
y2 <- x + e2
mod4 <- lm(y2~x)
plot(mod4, which = 1)
e2 <- .3*sign(e)*sort(abs(e)) + e
y2 <- x + e2
mod4 <- lm(y2~x)
plot(mod4, which = 1)
e2 <- sign(e)*sort(abs(e)) + e
y2 <- x + e2
mod4 <- lm(y2~x)
plot(mod4, which = 1)
# homoskedastic example
x <- sort(rnorm(500))
e <- rnorm(500)
y <- x + e
mod3 <- lm(y~x)
par(mfrow = c(1, 2))
plot(mod3, which = 1)
# heteroskedastic example
e2 <- sign(e)*sort(abs(e)) + e
y2 <- x + e2
mod4 <- lm(y2~x)
plot(mod4, which = 1)
points(e, y)
plot(mod4, which = 1, pch = 0)
plot(mod4, which = 1, pch = 0)
plot(mod4, which = 1, pch = NULL)
plot(mod4, which = 1, pch = 26)
plot(mod4, which = 1, pch = 26)
points(e, y)
plot(mod4, which = 1, pch = 26)
points(e, y)
mod4
plot(mod4, which = 1, pch = 26)
points(e, y)
plot(mod4, which = 1, pch = 26)
points(e, x)
points(e[x > 1]^2 x[x > 1])
plot(mod4, which = 1, pch = 26)
points(e, x)
points(e[x > 1]^2 x[x > 1])
points(e[x > 1]^2, x[x > 1])
x > 1
e2 <- sign(e)*sort(abs(e)) + e
y2 <- x + e2
mod4 <- lm(y2~x)
plot(mod4, which = 1, pch = 26)
points(e, x)
points(e[x > 1]^2, x[x > 1])
plot(mod4, which = 1, pch = 26)
points(e, x)
points(e[x > 1]^2 + e[x > 1]^2, x[x > 1])
points(e[x > 1]^2 - e[x > 1]^2, x[x > 1])
points(e[x > 1] + e[x > 1]^2, x[x > 1])
points(e[x > 1] - e[x > 1]^2, x[x > 1])
points(2*e[x > 1], x[x > 1])
plot(mod4, which = 1, pch = 26)
points(e, x)
points(2*e[x > 1], x[x > 1])
points(e[x > 1] + sign(e[x > 1]) * e[x > 1]^2, x[x > 1])
points(2*e[x > 1], x[x > 1])
points(e[x > 1] + sign(e[x > 1]) * e[x > 1]^2, x[x > 1])
plot(mod4, which = 1, pch = 26)
points(e, x)
points(2*e[x > 1], x[x > 1])
points(e[x > 1] + sign(e[x > 1]) * e[x > 1]^2, x[x > 1])
e[x > 1]^2
points(e[x > 1] + sign(e[x > 1]) * e[x > 1]^2, x[x > 1])
mod4 <- lm(y2~x)
plot(mod4, which = 1, pch = 26)
points(e, x)
points(e[x > 1] + sign(e[x > 1]) * e[x > 1]^2, x[x > 1])
plot(mod4, which = 1, pch = 26)
points(e, x)
points(e[x > 1] + sign(e[x > 1]) * x[x > 1], x[x > 1])
plot(mod4, which = 1, pch = 26)
points(e, x)
points(e[x > 1] + sign(e[x > 1]) * 2*x[x > 1], x[x > 1])
mod4 <- lm(y2~x)
plot(mod4, which = 1, pch = 26)
points(x, e)
points(x[x > 1], e[x > 1] + sign(e[x > 1]) * 2*x[x > 1])
plot(mod4, which = 1, pch = 26)
points(x, e)
points(x[x > 1], e[x > 1] + sign(e[x > 1]) * x[x > 1])
plot(mod4, which = 1, pch = 26)
points(x, .5*e)
points(x[x > 1], e[x > 1] + sign(e[x > 1]) * x[x > 1])
plot(mod4, which = 1, pch = 26)
points(x, .5*e)
points(x[x > 0], e[x > 0] + sign(e[x > 0]) * x[x > 0])
plot(mod4, which = 1, pch = 26)
points(x, .5*e)
points(x[x > -1], e[x > -1] + sign(e[x > -1]) * x[x > -1])
# homoskedastic example
x <- sort(rnorm(500))
e <- rnorm(500)
y <- x + e
mod3 <- lm(y~x)
par(mfrow = c(1, 2))
plot(mod3, which = 1)
# heteroskedastic example
e2 <- sign(e)*sort(abs(e)) + e
y2 <- x + e2
mod4 <- lm(y2~x)
plot(mod4, which = 1, pch = 26)
points(x, .5*e)
points(x[x > -1], e[x > -1] + sign(e[x > -1]) * x[x > -1])
# homoskedastic example
x <- sort(rnorm(500))
e <- rnorm(500)
y <- x + e
mod3 <- lm(y~x)
par(mfrow = c(1, 2))
plot(mod3, which = 1)
# heteroskedastic example
e2 <- sign(e)*sort(abs(e)) + e
y2 <- x + e2
mod4 <- lm(y2~x)
plot(mod4, which = 1, pch = 26)
points(x, .5*e)
points(x[x > -1], e[x > -1] + sign(e[x > -1]) * x[x > -1])
plot(mod4, which = 1, pch = 26)
points(x[x < 1], .5*e[x < 1])
points(x[x > -1], e[x > -1] + sign(e[x > -1]) * x[x > -1])
plot(mod4, which = 1, pch = 26)
points(x[x < -1], .5*e[x < -1])
points(x[x > -1], .5*e[x > -1])
points(x[x > -1], e[x > -1] + sign(e[x > -1]) * x[x > -1])
points(x[x < -1], .5*e[x < -1])
points(x[x > -1], *e[x > -1])
points(x[x > -1], e[x > -1] + sign(e[x > -1]) * x[x > -1])
plot(mod4, which = 1, pch = 26)
points(x[x < -1], .5*e[x < -1])
points(x[x > -1], *e[x > -1])
points(x[x > -1], e[x > -1] + sign(e[x > -1]) * x[x > -1])
plot(mod4, which = 1, pch = 26)
points(x[x < -1], .5*e[x < -1])
points(x[x > -1], e[x > -1])
points(x[x > -1], e[x > -1] + sign(e[x > -1]) * x[x > -1])
plot(mod3, which = 1, pch = 26)
points(x[x < -1], .5*e[x < -1])
points(x[x > -1], e[x > -1])
points(x[x > -1], e[x > -1] + sign(e[x > -1]) * x[x > -1])
set.seed9(101)
x <- sort(rnorm(250))
e <- rnorm(250)
y <- x + e
mod3 <- lm(y~x)
par(mfrow = c(1, 2))
plot(mod3, which = 1)
# heteroskedastic example
plot(mod3, which = 1)
points(x[x > -1], e[x > -1] + sign(e[x > -1]) * x[x > -1])
set.seed9(102)
x <- sort(rnorm(250))
e <- rnorm(250)
y <- x + e
mod3 <- lm(y~x)
par(mfrow = c(1, 2))
plot(mod3, which = 1)
# heteroskedastic example
plot(mod3, which = 1)
points(x[x > -1], e[x > -1] + sign(e[x > -1]) * x[x > -1])
# heteroskedastic example
plot(mod3, which = 1)
points(x[x > -1], e[x > -1] + sign(e[x > -1]) * 2 * x[x > -1])
plot(mod3, which = 1, ylim = c(-4, 4))
plot(mod3, which = 1, ylim = c(-4, 4))
points(x[x > -1], e[x > -1] + sign(e[x > -1])  * x[x > -1])
plot(mod3, which = 1, ylim = c(-4, 4))
plot(mod3, which = 1, type = 'n')
points(x[x > -1], e[x > -1] + sign(e[x > -1])  * x[x > -1])
plot(x, y)
set.seed9(102)
x <- sort(rnorm(250))
e <- rnorm(250)
y <- x + e
mod3 <- lm(y~x)
par(mfrow = c(1, 2))
plot(mod3, which = 1)
# heteroskedastic example
y[y > 0] <- y[y > 0] + sign(e[y>0]) 2* e[y>0]
mod4 <- lm(y~x)
plot(mod4, which = 1)
y[y > 0] <- y[y > 0] + sign(e[y>0]) * 2* e[y>0]
mod4 <- lm(y~x)
plot(mod4, which = 1)
set.seed9(102)
x <- sort(rnorm(250))
e <- rnorm(250)
y <- x + e
mod3 <- lm(y~x)
par(mfrow = c(1, 2))
plot(mod3, which = 1)
# heteroskedastic example
y[y > 0] <- y[y > 0] + 2* e[y>0]
mod4 <- lm(y~x)
plot(mod4, which = 1)
y2 <- y
y2[x > 0] <- x[x > 0] + 2* e[x>0]
mod4 <- lm(y~x)
plot(mod4, which = 1)
y2 <- y
y2[x > 0] <- y[x > 0] + 2* e[x>0]
mod4 <- lm(y~x)
plot(mod4, which = 1)
set.seed9(102)
x <- sort(rnorm(250))
e <- rnorm(250)
y <- x + e
mod3 <- lm(y~x)
par(mfrow = c(1, 2))
plot(mod3, which = 1)
# heteroskedastic example
y2 <- y
y2[x > 1] <- y[x > 1] + 2* e[x>1]
mod4 <- lm(y~x)
plot(mod4, which = 1)
mod4 <- lm(y2~x)
plot(mod4, which = 1)
y2[x > 0] <- x[x > 0] + 2* e[x>0]
mod4 <- lm(y2~x)
plot(mod4, which = 1)
y2[x > 0] <- x[x > 0] + 2* e[x>0]
mod4 <- lm(y2~x)
plot(mod4, which = 1)
y2 <- y
y2[x > 0] <- x[x > 0] + 2* e[x>0]
y2[x < 0] <- x[x < 0] + .5* e[x>0]
mod4 <- lm(y2~x)
plot(mod4, which = 1)
y2[x > 0] <- x[x > 0] + 2* e[x > 0]
y2[x < 0] <- x[x < 0] + .5* e[x < 0]
mod4 <- lm(y2~x)
plot(mod4, which = 1)
y2 <- y
y2[x > 1] <- x[x > 1] + 2* e[x > 1]
y2[x < -1] <- x[x < -1] + .5* e[x < -1]
mod4 <- lm(y2~x)
plot(mod4, which = 1)
y2 <- y
y2[x > 1] <- x[x > 1] + 3* e[x > 1]
y2[x < -1] <- x[x < -1] + .25* e[x < -1]
mod4 <- lm(y2~x)
plot(mod4, which = 1)
y2 <- y
y2[x > 1] <- x[x > 1] + 3* e[x > 1]
y2[x < -1] <- x[x < -1] + .3* e[x < -1]
mod4 <- lm(y2~x)
plot(mod4, which = 1)
set.seed(101)
x <- sort(rnorm(250))
e <- rnorm(250)
y <- x + e
mod3 <- lm(y~x)
par(mfrow = c(1, 2))
plot(mod3, which = 1)
# heteroskedastic example
y2 <- y
y2[x > 1] <- x[x > 1] + 3* e[x > 1]
y2[x < -1] <- x[x < -1] + .3* e[x < -1]
mod4 <- lm(y2~x)
plot(mod4, which = 1)
e <- vector(list 4)
plot(mod3, which = 1)
segments(x0 = -1.5, y0 = 2, x1 = 2, y1 = 2, col = "#4B9CD3")
segments(x0 = -1.8, y0 = 2, x1 = 1.8 y1 = 2, col = "#4B9CD3" lty = 2, lwd = 3)
segments(x0 = -1.8, y0 = 2, x1 = 1.8 y1 = 2, col = "#4B9CD3" lty = 2, lwd = 3)
plot(mod3, which = 1)
segments(x0 = -1.8, y0 = 2, x1 = 1.8 y1 = 2, col = "#4B9CD3" lty = 2, lwd = 3)
segments(x0 = -1.8, y0 = 2, x1 = 1.8 y1 = 2, col = "#4B9CD3", lty = 2, lwd = 3)
plot(mod3, which = 1)
segments(x0 = -1.8, y0 = 2, x1 = 1.8, y1 = 2, col = "#4B9CD3", lty = 2, lwd = 3)
segments(x0 = -1.8, y0 = -2, x1 = 1.8, y1 = -2, col = "#4B9CD3", lty = 2, lwd = 3)
plot(mod3, which = 1)
segments(x0 = -1.8, y0 = 2, x1 = 1.8, y1 = 2, col = "#4B9CD3", lty = 2, lwd = 3)
segments(x0 = -1.8, y0 = -2, x1 = 1.8, y1 = -2, col = "#4B9CD3", lty = 2, lwd = 3)
plot(mod3, which = 1)
segments(x0 = -1.8, y0 = 2, x1 = 1.5, y1 = 2, col = "#4B9CD3", lty = 2, lwd = 3)
segments(x0 = -1.8, y0 = -2, x1 = 1.5, y1 = -2, col = "#4B9CD3", lty = 2, lwd = 3)
plot(mod3, which = 1)
segments(x0 = -1.5, y0 = 2, x1 = 1.5, y1 = 2, col = "#4B9CD3", lty = 2, lwd = 3)
segments(x0 = -1.5, y0 = -2, x1 = 1.5, y1 = -2, col = "#4B9CD3", lty = 2, lwd = 3)
plot(mod4, which = 1)
segments(x0 = -1.5, y0 = .3, x1 = 1.5, y1 = 5, col = "#4B9CD3", lty = 2, lwd = 3)
segments(x0 = -1.5, y0 = -.3, x1 = 1.5, y1 = -5, col = "#4B9CD3", lty = 2, lwd = 3)
plot(mod4, which = 1)
segments(x0 = -1.5, y0 = .5, x1 = 1.5, y1 = 5, col = "#4B9CD3", lty = 2, lwd = 3)
segments(x0 = -1.5, y0 = -.5, x1 = 1.5, y1 = -5, col = "#4B9CD3", lty = 2, lwd = 3)
plot(mod4, which = 1)
segments(x0 = -1.5, y0 = 1, x1 = 1.5, y1 = 5, col = "#4B9CD3", lty = 2, lwd = 3)
segments(x0 = -1.5, y0 = -1, x1 = 1.5, y1 = -5, col = "#4B9CD3", lty = 2, lwd = 3)
distributions <- read.csv("distributions.csv")
attach(distributions)
dist_names <- names(distributions)
dist_names
# Plotting Anscombe's quartet
attach(anscombe)
par(mfrow = c(2,2))
ymax <- max(anscombe[,5:8])
ymin <- min(anscombe[,5:8])
xmax <- max(anscombe[,1:4])
xmin <- min(anscombe[,1:4])
plot(x1, y1, col = "#4B9CD3", xlim = c(xmin, xmax), ylim = c(ymin, ymax))
abline(lm(y1 ~ x1))
plot(x2, y2, col = "#4B9CD3", xlim = c(xmin, xmax), ylim = c(ymin, ymax))
abline(lm(y2 ~ x2))
plot(x3, y3, col = "#4B9CD3", xlim = c(xmin, xmax), ylim = c(ymin, ymax))
abline(lm(y3 ~ x3))
plot(x4, y4, col = "#4B9CD3", xlim = c(xmin, xmax), ylim = c(ymin, ymax))
abline(lm(y4 ~ x4))
(81.11 - 83.12) / sqrt(() 37 * 8.84^2 + 36 * 7.74^2 ) / (37 + 36 - 2))
(81.11 - 83.12) / sqrt((37 * 8.84^2 + 36 * 7.74^2 ) / (37 + 36 - 2))
fitted(mod2, 5:19)
attach(wages)
mod2 <- lm(log_wage ~ poly(educ, 2))
par(mfrow = c(1,2))
plot(educ, log_wage, col = "#4B9CD3")
points(5:19, fitted(mod2, 5:19), type = "l")
plot(mod2, 1, col = "#4B9CD3")
summary(mod2)
load("Wages.RData")
attach(wages)
mod2 <- lm(log_wage ~ poly(educ, 2))
par(mfrow = c(1,2))
plot(educ, log_wage, col = "#4B9CD3")
points(5:19, fitted(mod2, 5:19), type = "l")
plot(mod2, 1, col = "#4B9CD3")
summary(mod2)
attach(wages)
# Create log transform of wage
log_wage <- log(wage + 1)
mod2 <- lm(log_wage ~ poly(educ, 2))
par(mfrow = c(1,2))
plot(educ, log_wage, col = "#4B9CD3")
points(5:19, fitted(mod2, 5:19), type = "l")
fitted(mod2, 5:19)
help(fitted)
fitted(mod2, x = 5:19)
predict(mod2, newdata = 5:19)
newdata <- dataframe(wages = 5:19)
predict(mod2, newdata = 5:19)
newdata <- dataframe(wages = 5:19)
newdata <- data.frame(wages = 5:19)
newdata
newdata <- data.frame(wages = 5:19)
points(5:19, predict(mod2, newdata), type = "l")
plot(mod2, 1, col = "#4B9CD3")
summary(mod2)
predict(mod2, newdata)
predict(mod2, newdata = newdata)
newdata <- data.frame(wages = 5:19)
points(5:19, predict(mod2, newdata = newdata), type = "l")
newdata <- data.frame(wages = 5:19)
predict(mod2, newdata = newdata)
predict
help(predict)
View(wages)
mod4 <- lm(wage ~ educ*educ12)
educ12 <- (educ > 12)*1
mod4 <- lm(wage ~ educ*educ12)
summary(mod4)
mod4 <- lm(wage ~ educ*educ12)
wages <- rbind(wages, wages)
# Create a dummy variable indicating if education is at least 12 years or more
educ12 <- (educ > 12)*1
mod4 <- lm(log(wage + 1) ~ educ*educ12)
summary(mod4)
attach(wages)
educ12 <- (educ > 12)*1
# Interact the dummy with educ
mod4 <- lm(log(wage + 1) ~ educ*educ12)
summary(mod4)
save(wages, "Wages.RData")
save(wages, file = "Wages.RData")
load("~/git/EDUC_784/Wages.RData")
educ12 <- (educ > 12)*1
int <- (educ-12)*(educ12)
# Interact the dummy with educ
mod4 <- lm(log(wage + 1) ~ educ + educ12 + int)
wages$fitted <- fitted(mod4)
# Sort data on educ
wages <- wages[order(educ), ]
# Plot
plot(educ, log(wage + 1), col = "#4B9CD3")
# Change color for the points with educ ≤ 12
with(subset(wages, educ <= 12), points(educ, log(wage + 1)))
# Plot the predicted values for educ > 12
with(subset(wages, educ > 12), lines(educ, fitted, col = "#4B9CD3"))
# Plot the predicted values for educ ≤ 12
with(subset(wages, educ <= 12), lines(educ, fitted))
detach(wages)
install.packages("car")
install.packages("lmtest")
e sure library(car)
library(car)
hccse
help(hcse)
help(hcc)
help("hccm")
lmtest(mod, hcse)
## Step 2. Use the HC SEs to compute t-test using "lmtest"
lmtest::lmtest(mod, hcse)
lmtest::lmtest(mod, hcse)
lmtest::coeftest(mod, hcse)
hcse <- car::hccm(mod4)
