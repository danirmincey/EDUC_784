install.packages("codefolder")
devtools::install_github("ijlyttle/codefolder")
library(ddplot2)
library(ggplot2)
load("NELS.RData")
attach(NELS)
load("NELS.RData")
attach(NELS)
summary(ses)
library(pwr)
help("pwr.f2.test")
load("/Users/halpin/Dropbox/Academic/Teaching/UNC/Data/ECLS/ECLS2577.RData")
head(NELS)
head(ecls)
plot(c1rrscal, wkses1)
attach(ecls)
plot(c1rrscal, wkses1)
plot(c1rrscal, wksesl)
plot(wksesl, c1rrscal)
load("/Users/halpin/Dropbox/Academic/Teaching/UNC/Data/ECLS/ECLS250.RData")
load("/Users/halpin/git/EDUC_784/ECLS250.RData")
attach(ecls)
plot(wksesl, c1rrscal)
head(NELS)
lm(achrdg08 ~ ses + slfcnc08)
mod <- lm(achrdg08 ~ ses + slfcnc08)
summary(mod)
plot(c1rmscal, wksesl)
plot(wksesl, c1rrscal)
plot(wksesl, c1rmscal)
plot(wksesl, c1rmscal)n
scale(wksesl)
summary(scale(wksesl))
load("ECLS2577.RData")
summary(ECLS2577$wksesl)
summary(ECLS$wksesl)
summary(ecls$wksesl)
help(pairs)
load("ECLS250.RData")
attach(ecls)
example_data <- cbind(c1rmscal, wksesl, t1learn)
pairs(example_data , col = "#4B9CD3")
round(2, cor(example_data))
cor(example_data)
coef(mod1)
mod1 <- lm(Numeracy ~ SES  + ATL, data = example_data)
mod2a <- lm(Numeracy ~ SES, data = example_data)
mod2b <- lm(Numeracy ~ ATL, data = example_data)
coef(mod1)
example_data <- data.frame(c1rmscal, wksesl, t1learn)
mod1 <- lm(Numeracy ~ SES  + ATL, data = example_data)
mod2a <- lm(Numeracy ~ SES, data = example_data)
mod2b <- lm(Numeracy ~ ATL, data = example_data)
coef(mod1)
names(example_data) <- c("Numeracy", "SES", "ATL")
mod1 <- lm(Numeracy ~ SES  + ATL, data = example_data)
mod2a <- lm(Numeracy ~ SES, data = example_data)
mod2b <- lm(Numeracy ~ ATL, data = example_data)
coef(mod1)
c(coeff(mod1), summary(mod1)$r.squared)
c(coef(mod1), summary(mod1)$r.squared)
out1 <- c(coef(mod1), summary(mod1)$r.squared)
out2a <- c(coef(mod2a), NA, summary(mod2a)$r.squared)
out2b <- c(coef(mod2a), NA, summary(mod2a)$r.squared)[1,3,2,4]
out <- data.frame(rbind(out1, out2a, out2b))
names(out) <- c(names(out1), "R-squared")
knitr::kable(out)
out1 <- c(coef(mod1), summary(mod1)$r.squared)
out2a <- c(coef(mod2a), NA, summary(mod2a)$r.squared)
c(coef(mod2b), NA, summary(mod2b)$r.squared)[1,3,2,4]
c(coef(mod2b), NA, summary(mod2b)$r.squared)[c(1,3,2,4)]
out <- data.frame(rbind(out1, out2a, out2b))
out1 <- c(coef(mod1), summary(mod1)$r.squared)
out2a <- c(coef(mod2a), NA, summary(mod2a)$r.squared)
out2b <- c(coef(mod2b), NA, summary(mod2b)$r.squared)[c(1,3,2,4)]
out <- data.frame(rbind(out1, out2a, out2b))
names(out) <- c(names(out1), "R-squared")
out
out1 <- c(coef(mod1), summary(mod1)$r.squared)
out2a <- c(coef(mod2a), NA, summary(mod2a)$r.squared)
out2b <- c(coef(mod2b), NA, summary(mod2b)$r.squared)[c(1,3,2,4)]
out <- data.frame(rbind(out1, out2a, out2b))
names(out) <- c(coef(out1), "R-squared")
knitr::kable(out)
out
c(names(coef(mod1)), "R-squared")
help(kable)
plot(mod1)
z_example_data <- data.frame(scale(example_data))
z_example_data
z_example_data <- data.frame(scale(example_data))
z_mod <- lm(Math ~ SES  + ATL, data = z_example_data)
summary(z_mod)
z_example_data <- as.matrix(scale(example_data))
z_mod <- lm(Math ~ SES  + ATL, data = z_example_data)
summary(z_mod)
z_example_data <- as.matrix(scale(example_data))
attributes(z_example_data)
scale(example_data)$scaled:scale
scale(example_data)
scale(example_data)
as.matrix(scale(example_data))
scale(example_data)$scale.default
scale(example_data)
# Unlike other software, R doesn't have a convenience functions for beta coefficients.
z_example_data <- scale(example_data)
as.matrix)
z_example_data <- scale(example_data)
z_mod <- lm(Math ~ SES  + ATL, data = z_example_data)
# Unlike other software, R doesn't have a convenience functions for beta coefficients.
z_example_data <- as.data.frame(scale(example_data))
z_mod <- lm(Math ~ SES  + ATL, data = z_example_data)
z_example_data <- as.data.frame(scale(example_data))
z_mod <- lm(Math ~ SES  + ATL, data = z_example_data)
z_example_data
names(example_data) <- c("Math", "SES", "ATL")
z_example_data <- as.data.frame(scale(example_data))
z_mod <- lm(Math ~ SES  + ATL, data = z_example_data)
z_mod
# Use the help menu to see what the package does
help("pwr-package")
library(pwe)
library(pwr)
# Use the help menu to see what the package does
help("pwr-package")
load("/Users/halpin/Dropbox/Academic/Teaching/UNC/EDUC_784/Lessons/03.Two_predictors/ECLS250.RData")
head(ecls)
help(t.test)
mod3 <- lm(achmat12 ~ achrdg12 + gender, data = NELS)
load("NELS.RData")
mod3 <- lm(achmat12 ~ achrdg12 + gender, data = NELS)
mod3
3.5017
58.63 - 55.47
.72 - .17
summary(mod3)
load("/Users/peterhalpin/Dropbox/Academic/Teaching/UNC/EDUC_784/Data/NELS.RData")
names(NELS)
load("/Users/peterhalpin/Dropbox/Academic/Teaching/UNC/EDUC_784/Data/ECLS2577.RData")
wklangst
ecls$wklangst
ecls$p1center
lm(c1rmscal ~ p1center*wklangst)
mod <- lm(c1rmscal ~ p1center*wklangst, data = ecls)
summary(mod)
mod <- lm(c1rmscal ~ as.factor(p1center)*as.factor(wklangst), data = ecls)
summary(mod)
summary(mod)
mod <- lm(c1rrscal ~ as.factor(p1center)*as.factor(wklangst), data = ecls)
summary(mod)
mod <- lm(c4rrscal ~ as.factor(p1center)*as.factor(wklangst), data = ecls)
summary(mod)
mod <- lm(c2rrscal ~ as.factor(p1center)*as.factor(wklangst), data = ecls)
summary(mod)
wkmomed > 5
ecls$wkmomed > 5
ecls$mated <- (ecls$wkmomed > 5)*1
mod <- lm(c2rrscal ~ as.factor(p1center)*mated, data = ecls)
summary(mod)
mod <- lm(c1rrscal ~ as.factor(p1center)*mated, data = ecls)
summary(mod)
mod <- lm(c1rmscal ~ as.factor(p1center)*mated, data = ecls)
summary(mod)
mod <- lm(c4rmscal ~ as.factor(p1center)*mated, data = ecls)
summary(mod)
ecls$mated <- (ecls$wkmomed > 4)*1
mod <- lm(c4rmscal ~ as.factor(p1center)*mated, data = ecls)
summary(mod)
mod <- lm(c1rmscal ~ as.factor(p1center)*mated, data = ecls)
summary(mod)
mod <- lm(c1rrscal ~ as.factor(p1center)*mated, data = ecls)
summary(mod)
mod <- lm(c1rrscal ~ as.factor(p1chsesa)*mated, data = ecls)
summary(mod)
mod <- lm(c1rrscal ~ as.factor(gender)*mated, data = ecls)
summary(mod)
mod <- lm(c1rrscal ~ as.factor(gender)*as.factor(wksesq5), data = ecls)
summary(mod)
mod <- lm(c1rrscal ~ as.factor(p1center)*as.factor(wksesq5), data = ecls)
summary(mod)
mod <- lm(c1rrscal ~ as.factor(p1center)*as.factor(wksesq5), data = ecls)
mod <- lm(c1rrscal ~ as.factor(p1center)*as.factor(mated), data = ecls)
summary(mod)
visreg::visreg(mod, xvar = p1center, by = matex)
visreg::visreg(mod, xvar = p1center, by = mated)
ecls$p1center <- as.factor(ecls$p1center)
mod <- lm(c1rrscal ~ p1center*mated, data = ecls)
summary(mod)
visreg::visreg(mod, xvar = p1center, by = mated)
visreg::visreg(mod, xvar = "p1center", by = "mated", overlay = T)
help(visreg)
visreg::visreg(mod, xvar = "p1center", by = "mated", overlay = T, type = "contrast")
visreg::visreg(mod, xvar = "p1center", by = "mated", overlay = F, type = "contrast")
ecls$p1center <- as.factor(ecls$p1center)
ecls$wksesq5 <- as.factor(ecls$wksesq5)
mod <- lm(c1rrscal ~ wksesq5*p1center, data = ecls)
summary(mod)
mod <- lm(c1rrscal ~ wksesq5 + p1center, data = ecls)
summary(mod)
mod <- lm(c1rrscal ~ -1 + wksesq5*p1center, data = ecls)
summary(mod)
mod <- lm(c1rrscal ~ wksesq5*p1center, data = ecls)
summary(mod)
mod <- lm(c1rmscal ~ wksesq5*p1center, data = ecls)
summary(mod)
anova(mod)
visreg(mod, "wksesq5", by = "p1center")
visreg::visreg(mod, "wksesq5", by = "p1center")
visreg::visreg(mod, "wksesq5", by = "p1center", overlay  =T)
visreg::visreg(mod, "wksesq5", by = "p1center", overlay  =T ,pch = -1)
visreg::visreg(mod, "wksesq5", by = "p1center", overlay  =T ,partial = F)
visreg::visreg(mod, "wksesq5", by = "p1center", overlay  =T ,partial = F, rug = F)
mod <- lm(c1rrscal ~ wksesq5*p1center, data = ecls)
visreg::visreg(mod, "wksesq5", by = "p1center", overlay  =T ,partial = F, rug = F)
mod <- lm(c2rmscal ~ wksesq5*p1center, data = ecls)
visreg::visreg(mod, "wksesq5", by = "p1center", overlay  =T ,partial = F, rug = F)
mod <- lm(c4rmscal ~ wksesq5*p1center, data = ecls)
visreg::visreg(mod, "wksesq5", by = "p1center", overlay  =T ,partial = F, rug = F)
mod <- lm(c1rmscal ~ wksesq5*p1center, data = ecls)
visreg::visreg(mod, "wksesq5", by = "p1center", overlay  =T ,partial = F, rug = F)
visreg::visreg(mod, "wksesq5", by = "p1center", overlay  =T ,partial = F, rug = F)
anova(mod)
anova(mod)
ecls$prek <- as.factor(ecls$p1center, levels = c("Yes", "No"))
ecls$wksesq5 <- as.factor(ecls$wksesq5)
mod <- lm(c1rmscal ~ prek*wksesq5, data = ecls)
visreg::visre(mod, xvar = "wksesq5", by = "prek", partial = F, rug = F)
factor(ecls$p1center, levels = c("Yes", "No"))
help(factor)
ecls$prek <- factor(ecls$p1center, labels = c("Yes", "No"))
ecls$prek
ecls$prek <- factor(ecls$p1center, labels = c("Yes", "No"))
ecls$wksesq5 <- factor(ecls$wksesq5)
mod <- lm(c1rmscal ~ prek*wksesq5, data = ecls)
visreg::visreg(mod, xvar = "wksesq5", by = "prek", partial = F, rug = F)
visreg::visreg(mod, xvar = "wksesq5", by = "prek", partial = F, rug = F, overlay = T)
ecls$prek <- factor(ecls$p1center, labels = c("Yes", "No"))
ecls$wksesq5 <- factor(ecls$wksesq5)
mod <- lm(c1rmscal ~ prek*wksesq5, data = ecls)
visreg::visreg(mod, xvar = "wksesq5", by = "prek", partial = F, rug = F, overlay = T)
ecls$prek <- factor(ecls$p1center, labels = c("Yes", "No"))
ecls$wksesq5 <- factor(ecls$wksesq5)
mod <- lm(c1rmscal ~ prek*wksesq5, data = ecls)
visreg::visreg(mod, xvar = "wksesq5", by = "prek", partial = F, rug = F, overlay = T)
visreg::visreg(mod, xvar = "wksesq5", by = "prek", partial = F, rug = F, overlay = T, strip.names = T)
ecls$prek <- factor(ecls$p1center, labels = c("Yes", "No"))
ecls$wksesq5 <- factor(ecls$wksesq5)
mod <- lm(c1rmscal ~ prek*wksesq5, data = ecls)
visreg::visreg(mod, xvar = "wksesq5", by = "prek", partial = F, rug = F, overlay = T)
visreg::visreg(mod, xvar = "wksesq5", by = "prek", partial = F, rug = F, overlay = T, strip.names = T)
load(ecls)
ecls$prek <- factor(ecls$p1center, labels = c("Yes", "No"))
ecls$wksesq5 <- factor(ecls$wksesq5)
mod <- lm(c1rmscal ~ prek*wksesq5, data = ecls)
visreg::visreg(mod, xvar = "wksesq5", by = "prek",
partial = F, rug = F, overlay = T,
strip.names = T, xlab = "SESQ5" , yab = "Math"
)
load(ecls)
ecls$prek <- factor(ecls$p1center, labels = c("Yes", "No"))
ecls$wksesq5 <- factor(ecls$wksesq5)
mod <- lm(c1rmscal ~ prek*wksesq5, data = ecls)
visreg::visreg(mod, xvar = "wksesq5", by = "prek",
partial = F, rug = F, overlay = T,
strip.names = T, xlab = "SESQ5" , yab = "Math"
)
visreg::visreg(mod, xvar = "wksesq5", by = "prek",
partial = F, rug = F, overlay = T,
strip.names = T, xlab = "SESQ5" , ylab = "Math"
)
summary(mod)
oad("ECLS2577.Rdata")
ecls$prek <- factor(ecls$p1center, labels = c("1", "0"))
ecls$wksesq5 <- factor(ecls$wksesq5)
mod <- lm(c1rmscal ~ prek*wksesq5, data = ecls)
visreg::visreg(mod, xvar = "wksesq5", by = "prek",
partial = F, rug = F, overlay = T,
strip.names = T, xlab = "SESQ5",
ylab = "Math Achievement in K")
ecls$p1center
2 - ecls$p1center
load("ECLS2577.Rdata")
ecls$p1center
ecls$prek <- factor(2 - ecls$p1center)
ecls$wksesq5 <- factor(ecls$wksesq5)
mod <- lm(c1rmscal ~ prek*wksesq5, data = ecls)
visreg::visreg(mod, xvar = "wksesq5", by = "prek",
partial = F, rug = F, overlay = T,
strip.names = T, xlab = "SESQ5",
ylab = "Math Achievement in K")
mod <- lm(c1rmscal ~ prek*wksesq5, data = ecls)
summary(mod)
source('~/.active-rstudio-document', echo=TRUE)
help(detach)
detach()
install.packages("pacman")
load("/Users/peterhalpin/Dropbox/Academic/Teaching/UNC/Data/NELS/NELS.RData")
names(NELS)
The blocks will be entered into the model in the indicated order. The RQs will be addressed by examining the regression coefficients and R-square change ($\Delta R^2$) for each corresponding block. To aid the interpretation of regression coefficients, all continuous variables (predictors and outcome) will be transformed to z-scores. `plcenter` will be coded as binary indicator for pre-K status.
load("ECLS2577.RData")
attach(ecls)
# Recode variables
p1center <- 2 - p1center
z_c1rrscal <- scale(c1rrscal)
z_wksesl <- scale(wksesl)
z_wkmomed <- scale(wkmomed)
z_wkdaded <- scale(wkdaded)
# Run final models
mod <- lm(z_c1rrscal ~  p1center*(z_wksesl + z_wkmomed + z_wkdaded))
summary(mod)
load("ECLS2577.RData")
attach(ecls)
# Recode variables
p1center <- 2 - p1center
z_c1rrscal <- scale(c1rrscal)
z_wksesl <- scale(wksesl)
z_wkmomed <- scale(wkmomed)
z_wkdaded <- scale(wkdaded)
# Run final models
mod <- lm(z_c1rrscal ~  p1center*(z_wksesl + z_wkmomed + z_wkdaded))
summary(mod)
plot(mod)
p1center <- 2 - p1center
z_c1rrscal <- scale(c1rrscal)
z_wksesl <- scale(wksesl)
z_wkmomed <- scale(wkmomed)
z_wkdaded <- scale(wkdaded)
lz_c1rrscal <- log(z_c1rrscal - min(z_c1rrscal) + 1)
# Run final models
mod <- lm(lz_c1rrscal ~  p1center*(z_wksesl + z_wkmomed + z_wkdaded))
summary(mod)
summary(mod)
p1center <- 2 - p1center
z_c1rrscal <- scale(c1rrscal)
z_wksesl <- scale(wksesl)
z_wksesl1 <- z_wksesl^2
# Run final models
mod <- lm(lz_c1rrscal ~  p1center*(z_wksesl + z_wksesl2 + z_wkmomed + z_wkdaded))
z_wksesl2 <- z_wksesl^2
# Run final models
mod <- lm(lz_c1rrscal ~  p1center*(z_wksesl + z_wksesl2 + z_wkmomed + z_wkdaded))
summary(mod)
summary(mod)
