install.packages("codefolder")
devtools::install_github("ijlyttle/codefolder")
library(ddplot2)
library(ggplot2)
load("NELS.RData")
attach(NELS)
load("NELS.RData")
attach(NELS)
summary(ses)
library(pwr)
help("pwr.f2.test")
load("/Users/halpin/Dropbox/Academic/Teaching/UNC/Data/ECLS/ECLS2577.RData")
head(NELS)
head(ecls)
plot(c1rrscal, wkses1)
attach(ecls)
plot(c1rrscal, wkses1)
plot(c1rrscal, wksesl)
plot(wksesl, c1rrscal)
load("/Users/halpin/Dropbox/Academic/Teaching/UNC/Data/ECLS/ECLS250.RData")
load("/Users/halpin/git/EDUC_784/ECLS250.RData")
attach(ecls)
plot(wksesl, c1rrscal)
head(NELS)
lm(achrdg08 ~ ses + slfcnc08)
mod <- lm(achrdg08 ~ ses + slfcnc08)
summary(mod)
plot(c1rmscal, wksesl)
plot(wksesl, c1rrscal)
plot(wksesl, c1rmscal)
plot(wksesl, c1rmscal)n
scale(wksesl)
summary(scale(wksesl))
load("ECLS2577.RData")
summary(ECLS2577$wksesl)
summary(ECLS$wksesl)
summary(ecls$wksesl)
help(pairs)
load("ECLS250.RData")
attach(ecls)
example_data <- cbind(c1rmscal, wksesl, t1learn)
pairs(example_data , col = "#4B9CD3")
round(2, cor(example_data))
cor(example_data)
coef(mod1)
mod1 <- lm(Numeracy ~ SES  + ATL, data = example_data)
mod2a <- lm(Numeracy ~ SES, data = example_data)
mod2b <- lm(Numeracy ~ ATL, data = example_data)
coef(mod1)
example_data <- data.frame(c1rmscal, wksesl, t1learn)
mod1 <- lm(Numeracy ~ SES  + ATL, data = example_data)
mod2a <- lm(Numeracy ~ SES, data = example_data)
mod2b <- lm(Numeracy ~ ATL, data = example_data)
coef(mod1)
names(example_data) <- c("Numeracy", "SES", "ATL")
mod1 <- lm(Numeracy ~ SES  + ATL, data = example_data)
mod2a <- lm(Numeracy ~ SES, data = example_data)
mod2b <- lm(Numeracy ~ ATL, data = example_data)
coef(mod1)
c(coeff(mod1), summary(mod1)$r.squared)
c(coef(mod1), summary(mod1)$r.squared)
out1 <- c(coef(mod1), summary(mod1)$r.squared)
out2a <- c(coef(mod2a), NA, summary(mod2a)$r.squared)
out2b <- c(coef(mod2a), NA, summary(mod2a)$r.squared)[1,3,2,4]
out <- data.frame(rbind(out1, out2a, out2b))
names(out) <- c(names(out1), "R-squared")
knitr::kable(out)
out1 <- c(coef(mod1), summary(mod1)$r.squared)
out2a <- c(coef(mod2a), NA, summary(mod2a)$r.squared)
c(coef(mod2b), NA, summary(mod2b)$r.squared)[1,3,2,4]
c(coef(mod2b), NA, summary(mod2b)$r.squared)[c(1,3,2,4)]
out <- data.frame(rbind(out1, out2a, out2b))
out1 <- c(coef(mod1), summary(mod1)$r.squared)
out2a <- c(coef(mod2a), NA, summary(mod2a)$r.squared)
out2b <- c(coef(mod2b), NA, summary(mod2b)$r.squared)[c(1,3,2,4)]
out <- data.frame(rbind(out1, out2a, out2b))
names(out) <- c(names(out1), "R-squared")
out
out1 <- c(coef(mod1), summary(mod1)$r.squared)
out2a <- c(coef(mod2a), NA, summary(mod2a)$r.squared)
out2b <- c(coef(mod2b), NA, summary(mod2b)$r.squared)[c(1,3,2,4)]
out <- data.frame(rbind(out1, out2a, out2b))
names(out) <- c(coef(out1), "R-squared")
knitr::kable(out)
out
c(names(coef(mod1)), "R-squared")
help(kable)
plot(mod1)
z_example_data <- data.frame(scale(example_data))
z_example_data
z_example_data <- data.frame(scale(example_data))
z_mod <- lm(Math ~ SES  + ATL, data = z_example_data)
summary(z_mod)
z_example_data <- as.matrix(scale(example_data))
z_mod <- lm(Math ~ SES  + ATL, data = z_example_data)
summary(z_mod)
z_example_data <- as.matrix(scale(example_data))
attributes(z_example_data)
scale(example_data)$scaled:scale
scale(example_data)
scale(example_data)
as.matrix(scale(example_data))
scale(example_data)$scale.default
scale(example_data)
# Unlike other software, R doesn't have a convenience functions for beta coefficients.
z_example_data <- scale(example_data)
as.matrix)
z_example_data <- scale(example_data)
z_mod <- lm(Math ~ SES  + ATL, data = z_example_data)
# Unlike other software, R doesn't have a convenience functions for beta coefficients.
z_example_data <- as.data.frame(scale(example_data))
z_mod <- lm(Math ~ SES  + ATL, data = z_example_data)
z_example_data <- as.data.frame(scale(example_data))
z_mod <- lm(Math ~ SES  + ATL, data = z_example_data)
z_example_data
names(example_data) <- c("Math", "SES", "ATL")
z_example_data <- as.data.frame(scale(example_data))
z_mod <- lm(Math ~ SES  + ATL, data = z_example_data)
z_mod
