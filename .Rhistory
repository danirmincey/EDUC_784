)
summary(mod)
oad("ECLS2577.Rdata")
ecls$prek <- factor(ecls$p1center, labels = c("1", "0"))
ecls$wksesq5 <- factor(ecls$wksesq5)
mod <- lm(c1rmscal ~ prek*wksesq5, data = ecls)
visreg::visreg(mod, xvar = "wksesq5", by = "prek",
partial = F, rug = F, overlay = T,
strip.names = T, xlab = "SESQ5",
ylab = "Math Achievement in K")
ecls$p1center
2 - ecls$p1center
load("ECLS2577.Rdata")
ecls$p1center
ecls$prek <- factor(2 - ecls$p1center)
ecls$wksesq5 <- factor(ecls$wksesq5)
mod <- lm(c1rmscal ~ prek*wksesq5, data = ecls)
visreg::visreg(mod, xvar = "wksesq5", by = "prek",
partial = F, rug = F, overlay = T,
strip.names = T, xlab = "SESQ5",
ylab = "Math Achievement in K")
mod <- lm(c1rmscal ~ prek*wksesq5, data = ecls)
summary(mod)
source('~/.active-rstudio-document', echo=TRUE)
help(detach)
detach()
install.packages("pacman")
load("/Users/peterhalpin/Dropbox/Academic/Teaching/UNC/Data/NELS/NELS.RData")
names(NELS)
The blocks will be entered into the model in the indicated order. The RQs will be addressed by examining the regression coefficients and R-square change ($\Delta R^2$) for each corresponding block. To aid the interpretation of regression coefficients, all continuous variables (predictors and outcome) will be transformed to z-scores. `plcenter` will be coded as binary indicator for pre-K status.
load("ECLS2577.RData")
attach(ecls)
# Recode variables
p1center <- 2 - p1center
z_c1rrscal <- scale(c1rrscal)
z_wksesl <- scale(wksesl)
z_wkmomed <- scale(wkmomed)
z_wkdaded <- scale(wkdaded)
# Run final models
mod <- lm(z_c1rrscal ~  p1center*(z_wksesl + z_wkmomed + z_wkdaded))
summary(mod)
load("ECLS2577.RData")
attach(ecls)
# Recode variables
p1center <- 2 - p1center
z_c1rrscal <- scale(c1rrscal)
z_wksesl <- scale(wksesl)
z_wkmomed <- scale(wkmomed)
z_wkdaded <- scale(wkdaded)
# Run final models
mod <- lm(z_c1rrscal ~  p1center*(z_wksesl + z_wkmomed + z_wkdaded))
summary(mod)
plot(mod)
p1center <- 2 - p1center
z_c1rrscal <- scale(c1rrscal)
z_wksesl <- scale(wksesl)
z_wkmomed <- scale(wkmomed)
z_wkdaded <- scale(wkdaded)
lz_c1rrscal <- log(z_c1rrscal - min(z_c1rrscal) + 1)
# Run final models
mod <- lm(lz_c1rrscal ~  p1center*(z_wksesl + z_wkmomed + z_wkdaded))
summary(mod)
summary(mod)
p1center <- 2 - p1center
z_c1rrscal <- scale(c1rrscal)
z_wksesl <- scale(wksesl)
z_wksesl1 <- z_wksesl^2
# Run final models
mod <- lm(lz_c1rrscal ~  p1center*(z_wksesl + z_wksesl2 + z_wkmomed + z_wkdaded))
z_wksesl2 <- z_wksesl^2
# Run final models
mod <- lm(lz_c1rrscal ~  p1center*(z_wksesl + z_wksesl2 + z_wkmomed + z_wkdaded))
summary(mod)
summary(mod)
mod1 <- lm(lz_c1rrscal ~  z_wksesl + z_wksesl_sq)
mod2 <- lm(lz_c1rrscal ~  z_wksesl + z_wksesl_sq + z_wkmomed + z_wkdaded)
mod3 <- lm(lz_c1rrscal ~  z_wksesl + z_wksesl_sq + z_wkmomed + z_wkdaded + p1center)
mod4 <- lm(lz_c1rrscal ~  (z_wksesl + z_wksesl_sq + z_wkmomed + z_wkdaded)*p1center)
```
```{r, results = 'asis'}
# Regression Table
stargazer::stargazer(mod1, mod2, mod3, mod4, omit = "Constant")
load("ECLS2577.RData")
attach(ecls)
# Recode variables
p1center <- 2 - p1center
z_c1rrscal <- scale(c1rrscal)
z_wksesl <- scale(wksesl)
z_wksesl_sq <- z_wksesl^2
z_wkmomed <- scale(wkmomed)
z_wkdaded <- scale(wkdaded)
lz_c1rrscal <- log(z_c1rrscal - min(z_c1rrscal) + 1)
mod1 <- lm(lz_c1rrscal ~  z_wksesl + z_wksesl_sq)
mod2 <- lm(lz_c1rrscal ~  z_wksesl + z_wksesl_sq + z_wkmomed + z_wkdaded)
mod3 <- lm(lz_c1rrscal ~  z_wksesl + z_wksesl_sq + z_wkmomed + z_wkdaded + p1center)
mod4 <- lm(lz_c1rrscal ~  (z_wksesl + z_wksesl_sq + z_wkmomed + z_wkdaded)*p1center)
# Regression Table
stargazer::stargazer(mod1, mod2, mod3, mod4, omit = "Constant")
help(stargazer)
R2_1 <- summary(mod1)$r.squared
R2_1
anova(mod1, mod2, mod3, mod4)
anova(mod1, mod2, mod3, mod4)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document')
help(plot)
fitted <- predict(mod2)
fit <- predict(mod2)
res <- resid(mod2)
# new Y variable
ecls$new.y <- c1rmscal
y[x < 1]
x <- sort(rnorm(500))
y <- x + rnorm(500)
mod3 <- lm(y~x)
par(mfrow = c(1, 2))
plot(mod3, which = 1)
# heteroskedastic example
y[x < 1] <- y/abs(x)
y[x > 1] <- y*abs(x)
e[x < -1] <- 1/e[x < -1]
e[x > 1] <- e[x > 1]^2
y2 <- x + e
mod4 <- lm(y2~x)
plot(mod4, which = 1)
x <- sort(rnorm(500))
e <- rnorm(500)
y <- x + e
mod3 <- lm(y~x)
par(mfrow = c(1, 2))
plot(mod3, which = 1)
e[x < -1] <- 1/e[x < -1]
e[x > 1] <- e[x > 1]^2
sign(e)
x <- sort(rnorm(500))
e <- rnorm(500)
y <- x + e
mod3 <- lm(y~x)
par(mfrow = c(1, 2))
plot(mod3, which = 1)
# heteroskedastic example
e[x < -1] <- 1/e[x < -1]
e[x > 1] <- sign(e) * e[x > 1]^2
y2 <- x + e
mod4 <- lm(y2~x)
plot(mod4, which = 1)
e[x < -1] <- 1/e[x < -1]
e[x > 1] <- sign(e[x > 1]) * e[x > 1]^2
y2 <- x + e
mod4 <- lm(y2~x)
plot(mod4, which = 1)
e
plot(e, x)
x <- sort(rnorm(500))
e <- rnorm(500)
y <- x + e
mod3 <- lm(y~x)
par(mfrow = c(1, 2))
plot(mod3, which = 1)
# heteroskedastic example
e2[x < -1] <- 1/e[x < -1]
e2[x > 1] <- sign(e[x > 1]) * e[x > 1]^2
y2 <- x + e2
mod4 <- lm(y2~x)
plot(mod4, which = 1)
e2 <- e
e2[x < -1] <- 1/e[x < -1]
e2[x > 1] <- sign(e[x > 1]) * e[x > 1]^2
y2 <- x + e2
mod4 <- lm(y2~x)
plot(mod4, which = 1)
e
hist(e)
hist(e2)
e2 <- e
e2[x < -1] <- 1/e[x < -1]
e2[x > 1] <- sign(e[x > 1]) * e[x > 1]^2
e2[e2 > 5] <- 5
y2 <- x + e2
mod4 <- lm(y2~x)
plot(mod4, which = 1)
hist(e2)
2 <- e
e2[x < -1] <- 1/e[x < -1]
e2[x > 1] <- sign(e[x > 1]) * e[x > 1]^2
e2[e2 > 5] <- 5
e2[e2 < -5] <- -5
y2 <- x + e2
mod4 <- lm(y2~x)
plot(mod4, which = 1)
plot(x,e)
plot(x,e2)
1/e[x < -1]
e2 <- e
e2[x < -1] <- e[x< -1] - sign(e[x < -1]) * .5*e[x < -1]
e2[x > 1] <- e[x> 1] + sign(e[x > 1]) * .5*e[x > 1]
y2 <- x + e2
mod4 <- lm(y2~x)
plot(mod4, which = 1)
# heteroskedastic example
e2 <- sign(e)*sort(abs(e))
e2
e2 <- sign(e)*sort(abs(e))
y2 <- x + e2
mod4 <- lm(y2~x)
plot(mod4, which = 1)
x
# heteroskedastic example
e2 <- sign(e)*sort(abs(e)) + e
e2
y2 <- x + e2
mod4 <- lm(y2~x)
plot(mod4, which = 1)
# heteroskedastic example
e2 <- .5*sign(e)*sort(abs(e)) + e
y2 <- x + e2
mod4 <- lm(y2~x)
plot(mod4, which = 1)
e2 <- .3*sign(e)*sort(abs(e)) + e
y2 <- x + e2
mod4 <- lm(y2~x)
plot(mod4, which = 1)
e2 <- sign(e)*sort(abs(e)) + e
y2 <- x + e2
mod4 <- lm(y2~x)
plot(mod4, which = 1)
# homoskedastic example
x <- sort(rnorm(500))
e <- rnorm(500)
y <- x + e
mod3 <- lm(y~x)
par(mfrow = c(1, 2))
plot(mod3, which = 1)
# heteroskedastic example
e2 <- sign(e)*sort(abs(e)) + e
y2 <- x + e2
mod4 <- lm(y2~x)
plot(mod4, which = 1)
points(e, y)
plot(mod4, which = 1, pch = 0)
plot(mod4, which = 1, pch = 0)
plot(mod4, which = 1, pch = NULL)
plot(mod4, which = 1, pch = 26)
plot(mod4, which = 1, pch = 26)
points(e, y)
plot(mod4, which = 1, pch = 26)
points(e, y)
mod4
plot(mod4, which = 1, pch = 26)
points(e, y)
plot(mod4, which = 1, pch = 26)
points(e, x)
points(e[x > 1]^2 x[x > 1])
plot(mod4, which = 1, pch = 26)
points(e, x)
points(e[x > 1]^2 x[x > 1])
points(e[x > 1]^2, x[x > 1])
x > 1
e2 <- sign(e)*sort(abs(e)) + e
y2 <- x + e2
mod4 <- lm(y2~x)
plot(mod4, which = 1, pch = 26)
points(e, x)
points(e[x > 1]^2, x[x > 1])
plot(mod4, which = 1, pch = 26)
points(e, x)
points(e[x > 1]^2 + e[x > 1]^2, x[x > 1])
points(e[x > 1]^2 - e[x > 1]^2, x[x > 1])
points(e[x > 1] + e[x > 1]^2, x[x > 1])
points(e[x > 1] - e[x > 1]^2, x[x > 1])
points(2*e[x > 1], x[x > 1])
plot(mod4, which = 1, pch = 26)
points(e, x)
points(2*e[x > 1], x[x > 1])
points(e[x > 1] + sign(e[x > 1]) * e[x > 1]^2, x[x > 1])
points(2*e[x > 1], x[x > 1])
points(e[x > 1] + sign(e[x > 1]) * e[x > 1]^2, x[x > 1])
plot(mod4, which = 1, pch = 26)
points(e, x)
points(2*e[x > 1], x[x > 1])
points(e[x > 1] + sign(e[x > 1]) * e[x > 1]^2, x[x > 1])
e[x > 1]^2
points(e[x > 1] + sign(e[x > 1]) * e[x > 1]^2, x[x > 1])
mod4 <- lm(y2~x)
plot(mod4, which = 1, pch = 26)
points(e, x)
points(e[x > 1] + sign(e[x > 1]) * e[x > 1]^2, x[x > 1])
plot(mod4, which = 1, pch = 26)
points(e, x)
points(e[x > 1] + sign(e[x > 1]) * x[x > 1], x[x > 1])
plot(mod4, which = 1, pch = 26)
points(e, x)
points(e[x > 1] + sign(e[x > 1]) * 2*x[x > 1], x[x > 1])
mod4 <- lm(y2~x)
plot(mod4, which = 1, pch = 26)
points(x, e)
points(x[x > 1], e[x > 1] + sign(e[x > 1]) * 2*x[x > 1])
plot(mod4, which = 1, pch = 26)
points(x, e)
points(x[x > 1], e[x > 1] + sign(e[x > 1]) * x[x > 1])
plot(mod4, which = 1, pch = 26)
points(x, .5*e)
points(x[x > 1], e[x > 1] + sign(e[x > 1]) * x[x > 1])
plot(mod4, which = 1, pch = 26)
points(x, .5*e)
points(x[x > 0], e[x > 0] + sign(e[x > 0]) * x[x > 0])
plot(mod4, which = 1, pch = 26)
points(x, .5*e)
points(x[x > -1], e[x > -1] + sign(e[x > -1]) * x[x > -1])
# homoskedastic example
x <- sort(rnorm(500))
e <- rnorm(500)
y <- x + e
mod3 <- lm(y~x)
par(mfrow = c(1, 2))
plot(mod3, which = 1)
# heteroskedastic example
e2 <- sign(e)*sort(abs(e)) + e
y2 <- x + e2
mod4 <- lm(y2~x)
plot(mod4, which = 1, pch = 26)
points(x, .5*e)
points(x[x > -1], e[x > -1] + sign(e[x > -1]) * x[x > -1])
# homoskedastic example
x <- sort(rnorm(500))
e <- rnorm(500)
y <- x + e
mod3 <- lm(y~x)
par(mfrow = c(1, 2))
plot(mod3, which = 1)
# heteroskedastic example
e2 <- sign(e)*sort(abs(e)) + e
y2 <- x + e2
mod4 <- lm(y2~x)
plot(mod4, which = 1, pch = 26)
points(x, .5*e)
points(x[x > -1], e[x > -1] + sign(e[x > -1]) * x[x > -1])
plot(mod4, which = 1, pch = 26)
points(x[x < 1], .5*e[x < 1])
points(x[x > -1], e[x > -1] + sign(e[x > -1]) * x[x > -1])
plot(mod4, which = 1, pch = 26)
points(x[x < -1], .5*e[x < -1])
points(x[x > -1], .5*e[x > -1])
points(x[x > -1], e[x > -1] + sign(e[x > -1]) * x[x > -1])
points(x[x < -1], .5*e[x < -1])
points(x[x > -1], *e[x > -1])
points(x[x > -1], e[x > -1] + sign(e[x > -1]) * x[x > -1])
plot(mod4, which = 1, pch = 26)
points(x[x < -1], .5*e[x < -1])
points(x[x > -1], *e[x > -1])
points(x[x > -1], e[x > -1] + sign(e[x > -1]) * x[x > -1])
plot(mod4, which = 1, pch = 26)
points(x[x < -1], .5*e[x < -1])
points(x[x > -1], e[x > -1])
points(x[x > -1], e[x > -1] + sign(e[x > -1]) * x[x > -1])
plot(mod3, which = 1, pch = 26)
points(x[x < -1], .5*e[x < -1])
points(x[x > -1], e[x > -1])
points(x[x > -1], e[x > -1] + sign(e[x > -1]) * x[x > -1])
set.seed9(101)
x <- sort(rnorm(250))
e <- rnorm(250)
y <- x + e
mod3 <- lm(y~x)
par(mfrow = c(1, 2))
plot(mod3, which = 1)
# heteroskedastic example
plot(mod3, which = 1)
points(x[x > -1], e[x > -1] + sign(e[x > -1]) * x[x > -1])
set.seed9(102)
x <- sort(rnorm(250))
e <- rnorm(250)
y <- x + e
mod3 <- lm(y~x)
par(mfrow = c(1, 2))
plot(mod3, which = 1)
# heteroskedastic example
plot(mod3, which = 1)
points(x[x > -1], e[x > -1] + sign(e[x > -1]) * x[x > -1])
# heteroskedastic example
plot(mod3, which = 1)
points(x[x > -1], e[x > -1] + sign(e[x > -1]) * 2 * x[x > -1])
plot(mod3, which = 1, ylim = c(-4, 4))
plot(mod3, which = 1, ylim = c(-4, 4))
points(x[x > -1], e[x > -1] + sign(e[x > -1])  * x[x > -1])
plot(mod3, which = 1, ylim = c(-4, 4))
plot(mod3, which = 1, type = 'n')
points(x[x > -1], e[x > -1] + sign(e[x > -1])  * x[x > -1])
plot(x, y)
set.seed9(102)
x <- sort(rnorm(250))
e <- rnorm(250)
y <- x + e
mod3 <- lm(y~x)
par(mfrow = c(1, 2))
plot(mod3, which = 1)
# heteroskedastic example
y[y > 0] <- y[y > 0] + sign(e[y>0]) 2* e[y>0]
mod4 <- lm(y~x)
plot(mod4, which = 1)
y[y > 0] <- y[y > 0] + sign(e[y>0]) * 2* e[y>0]
mod4 <- lm(y~x)
plot(mod4, which = 1)
set.seed9(102)
x <- sort(rnorm(250))
e <- rnorm(250)
y <- x + e
mod3 <- lm(y~x)
par(mfrow = c(1, 2))
plot(mod3, which = 1)
# heteroskedastic example
y[y > 0] <- y[y > 0] + 2* e[y>0]
mod4 <- lm(y~x)
plot(mod4, which = 1)
y2 <- y
y2[x > 0] <- x[x > 0] + 2* e[x>0]
mod4 <- lm(y~x)
plot(mod4, which = 1)
y2 <- y
y2[x > 0] <- y[x > 0] + 2* e[x>0]
mod4 <- lm(y~x)
plot(mod4, which = 1)
set.seed9(102)
x <- sort(rnorm(250))
e <- rnorm(250)
y <- x + e
mod3 <- lm(y~x)
par(mfrow = c(1, 2))
plot(mod3, which = 1)
# heteroskedastic example
y2 <- y
y2[x > 1] <- y[x > 1] + 2* e[x>1]
mod4 <- lm(y~x)
plot(mod4, which = 1)
mod4 <- lm(y2~x)
plot(mod4, which = 1)
y2[x > 0] <- x[x > 0] + 2* e[x>0]
mod4 <- lm(y2~x)
plot(mod4, which = 1)
y2[x > 0] <- x[x > 0] + 2* e[x>0]
mod4 <- lm(y2~x)
plot(mod4, which = 1)
y2 <- y
y2[x > 0] <- x[x > 0] + 2* e[x>0]
y2[x < 0] <- x[x < 0] + .5* e[x>0]
mod4 <- lm(y2~x)
plot(mod4, which = 1)
y2[x > 0] <- x[x > 0] + 2* e[x > 0]
y2[x < 0] <- x[x < 0] + .5* e[x < 0]
mod4 <- lm(y2~x)
plot(mod4, which = 1)
y2 <- y
y2[x > 1] <- x[x > 1] + 2* e[x > 1]
y2[x < -1] <- x[x < -1] + .5* e[x < -1]
mod4 <- lm(y2~x)
plot(mod4, which = 1)
y2 <- y
y2[x > 1] <- x[x > 1] + 3* e[x > 1]
y2[x < -1] <- x[x < -1] + .25* e[x < -1]
mod4 <- lm(y2~x)
plot(mod4, which = 1)
y2 <- y
y2[x > 1] <- x[x > 1] + 3* e[x > 1]
y2[x < -1] <- x[x < -1] + .3* e[x < -1]
mod4 <- lm(y2~x)
plot(mod4, which = 1)
set.seed(101)
x <- sort(rnorm(250))
e <- rnorm(250)
y <- x + e
mod3 <- lm(y~x)
par(mfrow = c(1, 2))
plot(mod3, which = 1)
# heteroskedastic example
y2 <- y
y2[x > 1] <- x[x > 1] + 3* e[x > 1]
y2[x < -1] <- x[x < -1] + .3* e[x < -1]
mod4 <- lm(y2~x)
plot(mod4, which = 1)
e <- vector(list 4)
plot(mod3, which = 1)
segments(x0 = -1.5, y0 = 2, x1 = 2, y1 = 2, col = "#4B9CD3")
segments(x0 = -1.8, y0 = 2, x1 = 1.8 y1 = 2, col = "#4B9CD3" lty = 2, lwd = 3)
segments(x0 = -1.8, y0 = 2, x1 = 1.8 y1 = 2, col = "#4B9CD3" lty = 2, lwd = 3)
plot(mod3, which = 1)
segments(x0 = -1.8, y0 = 2, x1 = 1.8 y1 = 2, col = "#4B9CD3" lty = 2, lwd = 3)
segments(x0 = -1.8, y0 = 2, x1 = 1.8 y1 = 2, col = "#4B9CD3", lty = 2, lwd = 3)
plot(mod3, which = 1)
segments(x0 = -1.8, y0 = 2, x1 = 1.8, y1 = 2, col = "#4B9CD3", lty = 2, lwd = 3)
segments(x0 = -1.8, y0 = -2, x1 = 1.8, y1 = -2, col = "#4B9CD3", lty = 2, lwd = 3)
plot(mod3, which = 1)
segments(x0 = -1.8, y0 = 2, x1 = 1.8, y1 = 2, col = "#4B9CD3", lty = 2, lwd = 3)
segments(x0 = -1.8, y0 = -2, x1 = 1.8, y1 = -2, col = "#4B9CD3", lty = 2, lwd = 3)
plot(mod3, which = 1)
segments(x0 = -1.8, y0 = 2, x1 = 1.5, y1 = 2, col = "#4B9CD3", lty = 2, lwd = 3)
segments(x0 = -1.8, y0 = -2, x1 = 1.5, y1 = -2, col = "#4B9CD3", lty = 2, lwd = 3)
plot(mod3, which = 1)
segments(x0 = -1.5, y0 = 2, x1 = 1.5, y1 = 2, col = "#4B9CD3", lty = 2, lwd = 3)
segments(x0 = -1.5, y0 = -2, x1 = 1.5, y1 = -2, col = "#4B9CD3", lty = 2, lwd = 3)
plot(mod4, which = 1)
segments(x0 = -1.5, y0 = .3, x1 = 1.5, y1 = 5, col = "#4B9CD3", lty = 2, lwd = 3)
segments(x0 = -1.5, y0 = -.3, x1 = 1.5, y1 = -5, col = "#4B9CD3", lty = 2, lwd = 3)
plot(mod4, which = 1)
segments(x0 = -1.5, y0 = .5, x1 = 1.5, y1 = 5, col = "#4B9CD3", lty = 2, lwd = 3)
segments(x0 = -1.5, y0 = -.5, x1 = 1.5, y1 = -5, col = "#4B9CD3", lty = 2, lwd = 3)
plot(mod4, which = 1)
segments(x0 = -1.5, y0 = 1, x1 = 1.5, y1 = 5, col = "#4B9CD3", lty = 2, lwd = 3)
segments(x0 = -1.5, y0 = -1, x1 = 1.5, y1 = -5, col = "#4B9CD3", lty = 2, lwd = 3)
distributions <- read.csv("distributions.csv")
attach(distributions)
dist_names <- names(distributions)
dist_names
