--- 
title: "EDUC 784: Regression"
author: "Peter Halpin"
date: "`r Sys.Date()`"
site: bookdown::bookdown_site
documentclass: book
bibliography: [book.bib, packages.bib]
# url: your book url like https://bookdown.org/yihui/bookdown
# cover-image: path to the social sharing image like images/cover.jpg
description: |
  Course notes for EDUC 784
link-citations: yes
github-repo: peterhalpin/EDUC_784
---



# About

This web book provides the course notes for EDUC 784. It is currently under development, so any feedback is appreciated (e.g., during class or via email). 

<!-- Klude script for show/hide code buttons; needs to be after the main header in each file -->

```{=html}
<!-- This part can be programmatically generated with htmltools. Thus we can control initial state from the YAML front matter-->
<script id="code-folding-options" type="application/json">
  {"initial-state": "hide"}
</script>
```

```{js, echo = F}
document.addEventListener("DOMContentLoaded", function() {
  const languages = ['r', 'python', 'bash', 'sql', 'cpp', 'stan', 'julia', 'foldable'];
  const options = JSON.parse(document.getElementById("code-folding-options").text);
  const show = options["initial-state"] !== "hide";
  Array.from(document.querySelectorAll("pre.sourceCode")).map(function(pre) {
    const classList = pre.classList;
    if (languages.some(x => classList.contains(x))) {
      const div = pre.parentElement;
      const state = show || classList.contains("fold-show") && !classList.contains("fold-hide") ? " open" : "";
      div.outerHTML = `<details${state}><summary></summary>${div.outerHTML}</details>`;
    }
  });
});
```

```{css, echo = F}
summary {
  display: list-item;
  text-align: right;
}
summary::after {
  content: 'Code'
}
details[open] > summary::after {
  content: 'Hide'
}
```


```{r}
head(mtcars)
```

## Does code folding work in bookdown??

This is an example

```{r, echo = T}
x <- -5:5
plot(x, dnorm(x))
```

## Render book

You can render the HTML version of this example book without changing anything:

1. Find the **Build** pane in the RStudio IDE, and

1. Click on **Build Book**, then select your output format, or select "All formats" if you'd like to use multiple formats from the same book source files.

Or build the book from the R console:

```{r, eval=FALSE}
bookdown::render_book()
```

To render this example to PDF as a `bookdown::pdf_book`, you'll need to install XeLaTeX. You are recommended to install TinyTeX (which includes XeLaTeX): <https://yihui.org/tinytex/>.

## Preview book

As you work, you may start a local server to live preview this HTML book. This preview will update as you edit the book when you save individual .Rmd files. You can start the server in a work session by using the RStudio add-in "Preview book", or from the R console:

```{r eval=FALSE}
bookdown::serve_book()
```


```{r include=FALSE}
# automatically create a bib database for R packages
knitr::write_bib(c(
  .packages(), 'bookdown', 'knitr', 'rmarkdown'
), 'packages.bib')
```
